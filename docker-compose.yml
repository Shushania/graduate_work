version: "3.5"

services:

  nginx:
    build: nginx
    image: movie_image_nginx:1
    volumes:
      - ./mounts/media:/media/
      - ./mounts/static:/static/
    ports:
      - 8000:8000
    depends_on:
      - admin_panel
    container_name: movie_nginx
    restart: on-failure

  redis:
    image: "redis:alpine"
    volumes:
      - movie_redis:/data
    container_name: movie_redis
    expose:
      - "6379"
    restart: always

  admin_panel:
    build: admin_panel/app
    image: movie_image_admin_panel:1
    volumes:
      - ./mounts/media:/app/media/
      - ./mounts/static:/app/static/
    container_name: movie_admin_panel
    expose:
      - "8080"
    env_file:
      - .env.sample
    restart: always

  etl:
    container_name: movie_etl
    image: movie_image_etl:1
    build: etl
    env_file:
      - .env.sample
    restart: always

  search_service:
    container_name: movie_search_service
    image: movie_image_search_service:1
    build:
      context: ./
      dockerfile: search_service/Dockerfile
    env_file:
      - .env.sample
    expose:
      - "8060"
    restart: on-failure

  elasticsearch:
    image: elasticsearch:7.17.6
    volumes:
      - movie_elastic:/var/lib/elasticsearch/esdata1
    environment:
      - discovery.type=single-node
      - ingest.geoip.downloader.enabled=false
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms200m -Xmx200m
    container_name: movie_es
    restart: on-failure

  pg:
    image: postgres:13
    volumes:
      - ./admin_panel/postgresql:/docker-entrypoint-initdb.d
      - movie_postgresql:/var/lib/postgresql/data
    env_file: .env.sample
    container_name: movie_pg
    restart: on-failure

volumes:
  movie_postgresql:
    name: movie_postgresql
  movie_elastic:
    name: movie_elastic
  movie_redis:
    name: movie_redis
